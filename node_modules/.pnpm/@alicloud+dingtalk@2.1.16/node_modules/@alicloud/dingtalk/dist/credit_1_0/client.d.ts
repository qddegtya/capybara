/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class QueryScoreHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScoreRequest extends $tea.Model {
    encryption?: string;
    fullName?: string;
    idCardCode?: string;
    mobile?: string;
    orgName?: string;
    uniScCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScoreResponseBody extends $tea.Model {
    result?: QueryScoreResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScoreResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryScoreResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScoreResponseBodyResult extends $tea.Model {
    ccocScore?: number;
    cityChangeCnt3y?: number;
    cityChangeTrend2y?: number;
    classificationOfOrg?: string;
    growthRateLoginDays180d?: number;
    indChangeCnt3y?: number;
    indChangeTrend2y?: number;
    jobChangeCnt3y?: number;
    jobTitle?: string;
    joinDays?: number;
    loginDays14dPct?: number;
    loginDays365dPct?: number;
    orgCnt?: number;
    orgIndustrySubNameNew?: string;
    orgIndustryUpNameNew?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    /**
     * @summary 查询用户金融评分数据
     *
     * @param request QueryScoreRequest
     * @param headers QueryScoreHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryScoreResponse
     */
    queryScoreWithOptions(request: QueryScoreRequest, headers: QueryScoreHeaders, runtime: $Util.RuntimeOptions): Promise<QueryScoreResponse>;
    /**
     * @summary 查询用户金融评分数据
     *
     * @param request QueryScoreRequest
     * @return QueryScoreResponse
     */
    queryScore(request: QueryScoreRequest): Promise<QueryScoreResponse>;
}
