/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class OpenConnectionRequest extends $tea.Model {
    clientId?: string;
    clientSecret?: string;
    extras?: {
        [key: string]: any;
    };
    localIp?: string;
    subscriptions?: OpenConnectionRequestSubscriptions[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenConnectionResponseBody extends $tea.Model {
    endpoint?: string;
    ticket?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenConnectionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OpenConnectionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenConnectionRequestSubscriptions extends $tea.Model {
    topic?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    /**
     * @summary 云上网关注册长连接
     *
     * @param request OpenConnectionRequest
     * @param headers map
     * @param runtime runtime options for this request RuntimeOptions
     * @return OpenConnectionResponse
     */
    openConnectionWithOptions(request: OpenConnectionRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<OpenConnectionResponse>;
    /**
     * @summary 云上网关注册长连接
     *
     * @param request OpenConnectionRequest
     * @return OpenConnectionResponse
     */
    openConnection(request: OpenConnectionRequest): Promise<OpenConnectionResponse>;
}
