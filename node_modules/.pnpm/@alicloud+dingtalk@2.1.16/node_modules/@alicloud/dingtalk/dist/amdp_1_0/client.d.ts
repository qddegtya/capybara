/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AmdpEmployeeDataPushHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpEmployeeDataPushRequest extends $tea.Model {
    param?: AmdpEmployeeDataPushRequestParam[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpEmployeeDataPushResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    status?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpEmployeeDataPushResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AmdpEmployeeDataPushResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpJobPositionDataPushHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpJobPositionDataPushRequest extends $tea.Model {
    param?: AmdpJobPositionDataPushRequestParam[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpJobPositionDataPushResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    status?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpJobPositionDataPushResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AmdpJobPositionDataPushResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpOrganizationDataPushHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpOrganizationDataPushRequest extends $tea.Model {
    param?: AmdpOrganizationDataPushRequestParam[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpOrganizationDataPushResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    status?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpOrganizationDataPushResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AmdpOrganizationDataPushResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpEmployeeDataPushRequestParam extends $tea.Model {
    avatar?: string;
    isDelete?: string;
    name?: string;
    unionId?: string;
    userId?: string;
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpJobPositionDataPushRequestParam extends $tea.Model {
    deptId?: string;
    deptLeader?: string;
    isDelete?: string;
    leaderDeptId?: string;
    orderNumber?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AmdpOrganizationDataPushRequestParam extends $tea.Model {
    deptId?: string;
    deptManagerIdList?: string[];
    dingTalkDeptId?: string;
    dingTalkParentId?: string;
    isDelete?: string;
    name?: string;
    parentId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    /**
     * @summary 人员数据推送
     *
     * @param request AmdpEmployeeDataPushRequest
     * @param headers AmdpEmployeeDataPushHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return AmdpEmployeeDataPushResponse
     */
    amdpEmployeeDataPushWithOptions(request: AmdpEmployeeDataPushRequest, headers: AmdpEmployeeDataPushHeaders, runtime: $Util.RuntimeOptions): Promise<AmdpEmployeeDataPushResponse>;
    /**
     * @summary 人员数据推送
     *
     * @param request AmdpEmployeeDataPushRequest
     * @return AmdpEmployeeDataPushResponse
     */
    amdpEmployeeDataPush(request: AmdpEmployeeDataPushRequest): Promise<AmdpEmployeeDataPushResponse>;
    /**
     * @summary 任职数据推送
     *
     * @param request AmdpJobPositionDataPushRequest
     * @param headers AmdpJobPositionDataPushHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return AmdpJobPositionDataPushResponse
     */
    amdpJobPositionDataPushWithOptions(request: AmdpJobPositionDataPushRequest, headers: AmdpJobPositionDataPushHeaders, runtime: $Util.RuntimeOptions): Promise<AmdpJobPositionDataPushResponse>;
    /**
     * @summary 任职数据推送
     *
     * @param request AmdpJobPositionDataPushRequest
     * @return AmdpJobPositionDataPushResponse
     */
    amdpJobPositionDataPush(request: AmdpJobPositionDataPushRequest): Promise<AmdpJobPositionDataPushResponse>;
    /**
     * @summary 组织部门数据推送
     *
     * @param request AmdpOrganizationDataPushRequest
     * @param headers AmdpOrganizationDataPushHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return AmdpOrganizationDataPushResponse
     */
    amdpOrganizationDataPushWithOptions(request: AmdpOrganizationDataPushRequest, headers: AmdpOrganizationDataPushHeaders, runtime: $Util.RuntimeOptions): Promise<AmdpOrganizationDataPushResponse>;
    /**
     * @summary 组织部门数据推送
     *
     * @param request AmdpOrganizationDataPushRequest
     * @return AmdpOrganizationDataPushResponse
     */
    amdpOrganizationDataPush(request: AmdpOrganizationDataPushRequest): Promise<AmdpOrganizationDataPushResponse>;
}
