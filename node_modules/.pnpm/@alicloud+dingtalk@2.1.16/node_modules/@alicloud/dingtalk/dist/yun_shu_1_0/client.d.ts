/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class SaveOpenExternalLogHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveOpenExternalLogRequest extends $tea.Model {
    corpId?: string;
    logSource?: string;
    logType?: string;
    openExt?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveOpenExternalLogResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveOpenExternalLogResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveOpenExternalLogResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    /**
     * @summary 生态日志数据互通
     *
     * @param request SaveOpenExternalLogRequest
     * @param headers SaveOpenExternalLogHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return SaveOpenExternalLogResponse
     */
    saveOpenExternalLogWithOptions(request: SaveOpenExternalLogRequest, headers: SaveOpenExternalLogHeaders, runtime: $Util.RuntimeOptions): Promise<SaveOpenExternalLogResponse>;
    /**
     * @summary 生态日志数据互通
     *
     * @param request SaveOpenExternalLogRequest
     * @return SaveOpenExternalLogResponse
     */
    saveOpenExternalLog(request: SaveOpenExternalLogRequest): Promise<SaveOpenExternalLogResponse>;
}
