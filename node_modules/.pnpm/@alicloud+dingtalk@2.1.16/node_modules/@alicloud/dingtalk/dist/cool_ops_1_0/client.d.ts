/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class BatchQueryOpportunityTagHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOpportunityTagRequest extends $tea.Model {
    corpIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOpportunityTagResponseBody extends $tea.Model {
    result?: BatchQueryOpportunityTagResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOpportunityTagResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchQueryOpportunityTagResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvOppStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvOppStatusRequest extends $tea.Model {
    isvOpportunityStatusList?: UpdateIsvOppStatusRequestIsvOpportunityStatusList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvOppStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvOppStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateIsvOppStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOpportunityTagResponseBodyResultOpportunityList extends $tea.Model {
    activeUserCnt7d?: number;
    appActiveState?: string;
    corpId?: string;
    fstFunnelsourceNameLv1?: string;
    funnelsourceNameLv1?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOpportunityTagResponseBodyResult extends $tea.Model {
    opportunityList?: BatchQueryOpportunityTagResponseBodyResultOpportunityList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvOppStatusRequestIsvOpportunityStatusList extends $tea.Model {
    isvCorpId?: string;
    microAppId?: string;
    name?: string;
    note?: string;
    operCorpId?: string;
    operName?: string;
    operTime?: string;
    operUserId?: string;
    oppSourceCorpId?: string;
    opportunityStatus?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    /**
     * @summary ISV批量查询商机标签
     *
     * @param request BatchQueryOpportunityTagRequest
     * @param headers BatchQueryOpportunityTagHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchQueryOpportunityTagResponse
     */
    batchQueryOpportunityTagWithOptions(request: BatchQueryOpportunityTagRequest, headers: BatchQueryOpportunityTagHeaders, runtime: $Util.RuntimeOptions): Promise<BatchQueryOpportunityTagResponse>;
    /**
     * @summary ISV批量查询商机标签
     *
     * @param request BatchQueryOpportunityTagRequest
     * @return BatchQueryOpportunityTagResponse
     */
    batchQueryOpportunityTag(request: BatchQueryOpportunityTagRequest): Promise<BatchQueryOpportunityTagResponse>;
    /**
     * @summary ISV商机状态同步
     *
     * @param request UpdateIsvOppStatusRequest
     * @param headers UpdateIsvOppStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateIsvOppStatusResponse
     */
    updateIsvOppStatusWithOptions(request: UpdateIsvOppStatusRequest, headers: UpdateIsvOppStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateIsvOppStatusResponse>;
    /**
     * @summary ISV商机状态同步
     *
     * @param request UpdateIsvOppStatusRequest
     * @return UpdateIsvOppStatusResponse
     */
    updateIsvOppStatus(request: UpdateIsvOppStatusRequest): Promise<UpdateIsvOppStatusResponse>;
}
