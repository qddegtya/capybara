/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class RoleMemberMapValue extends $tea.Model {
    roleCode?: string;
    memberList?: RoleMemberMapValueMemberList[];
    companyCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionRequest extends $tea.Model {
    rolePermissionItemList?: AppendRolePermissionRequestRolePermissionItemList[];
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionShrinkRequest extends $tea.Model {
    rolePermissionItemListShrink?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AppendRolePermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequest extends $tea.Model {
    companyCode?: string;
    generalInvoiceVOList?: BatchAddInvoiceRequestGeneralInvoiceVOList[];
    operator?: string;
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponseBody extends $tea.Model {
    errorResult?: BatchAddInvoiceResponseBodyErrorResult[];
    successResult?: BatchAddInvoiceResponseBodySuccessResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchAddInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCustomerRequest extends $tea.Model {
    createCustomerRequestList?: BatchCreateCustomerRequestCreateCustomerRequestList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCustomerResponseBody extends $tea.Model {
    errorResult?: BatchCreateCustomerResponseBodyErrorResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchCreateCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BindCompanyAccountantBookHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BindCompanyAccountantBookRequest extends $tea.Model {
    accountantBookId?: string;
    companyCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BindCompanyAccountantBookResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BindCompanyAccountantBookResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BindCompanyAccountantBookResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusRequest extends $tea.Model {
    companyCode?: string;
    endTime?: number;
    financeType?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    taxNo?: string;
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CheckVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerRequest extends $tea.Model {
    creator?: string;
    description?: string;
    drawerEmail?: string;
    drawerTelephone?: string;
    name?: string;
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserBankName?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponseBody extends $tea.Model {
    customerCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptRequest extends $tea.Model {
    receipts?: CreateReceiptRequestReceipts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptResponseBody extends $tea.Model {
    results?: CreateReceiptResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptRequest extends $tea.Model {
    receipts?: DeleteReceiptRequestReceipts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptResponseBody extends $tea.Model {
    results?: DeleteReceiptResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBookkeepingUserListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBookkeepingUserListResponseBody extends $tea.Model {
    result?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBookkeepingUserListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetBookkeepingUserListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    code?: string;
    isDir?: boolean;
    name?: string;
    parentCode?: string;
    status?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCategoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountRequest extends $tea.Model {
    accountCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountResponseBody extends $tea.Model {
    accountCode?: string;
    accountId?: string;
    accountName?: string;
    accountRemark?: string;
    accountType?: string;
    accountantBookIdList?: string[];
    amount?: string;
    bankCode?: string;
    bankName?: string;
    createTime?: number;
    creator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFinanceAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormTemplateInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormTemplateInfoResponseBody extends $tea.Model {
    receiptFormTemplateInfoList?: GetFormTemplateInfoResponseBodyReceiptFormTemplateInfoList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormTemplateInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFormTemplateInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageRequest extends $tea.Model {
    request?: GetInvoiceByPageRequestRequest;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageShrinkRequest extends $tea.Model {
    requestShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBody extends $tea.Model {
    errorCode?: string;
    errorMsg?: string;
    result?: GetInvoiceByPageResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetInvoiceByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIsNewVersionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIsNewVersionResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIsNewVersionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetIsNewVersionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMultiCompanyInfoByCodeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMultiCompanyInfoByCodeResponseBody extends $tea.Model {
    advancedSettingList?: GetMultiCompanyInfoByCodeResponseBodyAdvancedSettingList[];
    companyCode?: string;
    companyName?: string;
    remark?: string;
    status?: string;
    taxNature?: string;
    taxNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMultiCompanyInfoByCodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMultiCompanyInfoByCodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProductHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProductRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProductResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    specification?: string;
    status?: string;
    unit?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProductResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetProductResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    code?: string;
    createTime?: number;
    creator?: string;
    description?: string;
    name?: string;
    projectCode?: string;
    projectName?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptRequest extends $tea.Model {
    code?: string;
    modelId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptResponseBody extends $tea.Model {
    appId?: string;
    data?: string;
    modelId?: string;
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetSupplierResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOpenApiTokenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOpenApiTokenRequest extends $tea.Model {
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOpenApiTokenResponseBody extends $tea.Model {
    accessToken?: string;
    appName?: string;
    expiresIn?: string;
    refreshExpiresIn?: string;
    refreshToken?: string;
    scope?: string;
    sid?: string;
    yongyouOrgId?: string;
    yongyouUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOpenApiTokenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetYongYouOpenApiTokenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOrgRelationHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOrgRelationResponseBody extends $tea.Model {
    chanjetCorpId?: string;
    chanjetUserId?: string;
    corpId?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetYongYouOrgRelationResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetYongYouOrgRelationResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProfessionBenefitConsumeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProfessionBenefitConsumeRequest extends $tea.Model {
    benefitCode?: string;
    bizRequestId?: string;
    quota?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProfessionBenefitConsumeResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProfessionBenefitConsumeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ProfessionBenefitConsumeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PushHistoricalReceiptsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PushHistoricalReceiptsRequest extends $tea.Model {
    bizId?: string;
    endTime?: number;
    forcedIgnoreDup?: boolean;
    formCodeList?: string[];
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PushHistoricalReceiptsResponseBody extends $tea.Model {
    taskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PushHistoricalReceiptsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PushHistoricalReceiptsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCategoryByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCategoryByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCompanyInvoiceRelationCountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCompanyInvoiceRelationCountRequest extends $tea.Model {
    companyCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCompanyInvoiceRelationCountResponseBody extends $tea.Model {
    relationCountMap?: {
        [key: string]: number;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCompanyInvoiceRelationCountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCompanyInvoiceRelationCountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCustomerByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCustomerByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoRequest extends $tea.Model {
    keyword?: string;
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCustomerInfoResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCustomerInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryEnterpriseAccountByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryEnterpriseAccountByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFinanceCompanyInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFinanceCompanyInfoResponseBody extends $tea.Model {
    companyName?: string;
    taxNature?: string;
    taxNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFinanceCompanyInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryFinanceCompanyInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceRelationCountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceRelationCountResponseBody extends $tea.Model {
    relationCountMap?: {
        [key: string]: number;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceRelationCountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryInvoiceRelationCountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMultiCompanyInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMultiCompanyInfoResponseBody extends $tea.Model {
    list?: QueryMultiCompanyInfoResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMultiCompanyInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMultiCompanyInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdRequest extends $tea.Model {
    companyCode?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdResponseBody extends $tea.Model {
    companyCode?: string;
    permissionDTOList?: QueryPermissionByUserIdResponseBodyPermissionDTOList[];
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPermissionByUserIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberRequest extends $tea.Model {
    companyCode?: string;
    roleCodeList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberResponseBody extends $tea.Model {
    roleMemberMap?: {
        [key: string]: RoleMemberMapValue;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPermissionRoleMemberResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProductByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProductByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProductByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryProductByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProductByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryProductByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryProjectByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryProjectByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceRequest extends $tea.Model {
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceResponseBody extends $tea.Model {
    result?: QueryReceiptDetailForInvoiceResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryReceiptDetailForInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceRequest extends $tea.Model {
    accountantBookId?: string;
    applyStatusList?: string[];
    bizStatusList?: string[];
    companyCode?: string;
    endTime?: number;
    pageNumber?: number;
    pageSize?: number;
    receiptStatusList?: string[];
    searchParams?: {
        [key: string]: string;
    };
    startTime?: number;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBody extends $tea.Model {
    hasMore?: string;
    list?: QueryReceiptForInvoiceResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryReceiptForInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoRequest extends $tea.Model {
    accountantBookId?: string;
    companyCode?: string;
    endTime?: number;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    timeFilterField?: string;
    title?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBody extends $tea.Model {
    hasMore?: string;
    list?: QueryReceiptsBaseInfoResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryReceiptsBaseInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageRequest extends $tea.Model {
    endTime?: number;
    modelId?: string;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    timeFilterField?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageResponseBody extends $tea.Model {
    hasMore?: string;
    list?: QueryReceiptsByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryReceiptsByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRoleMemberByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRoleMemberByPageRequest extends $tea.Model {
    companyCode?: string;
    maxResults?: string;
    nextToken?: string;
    roleCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRoleMemberByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryRoleMemberByPageResponseBodyList[];
    nextToken?: number;
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRoleMemberByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryRoleMemberByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QuerySupplierByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QuerySupplierByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListRequest extends $tea.Model {
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponseBody extends $tea.Model {
    financeEmpDeptOpenList?: QueryUserRoleListResponseBodyFinanceEmpDeptOpenList[];
    roleVOList?: QueryUserRoleListResponseBodyRoleVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserRoleListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedRequest extends $tea.Model {
    instanceId?: string;
    invoiceKeyVOList?: UnbindApplyReceiptAndInvoiceRelatedRequestInvoiceKeyVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedResponseBody extends $tea.Model {
    batchUpdateInvoiceResponse?: UnbindApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponse;
    errorInvoiceKeyVOList?: UnbindApplyReceiptAndInvoiceRelatedResponseBodyErrorInvoiceKeyVOList[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UnbindApplyReceiptAndInvoiceRelatedResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequest extends $tea.Model {
    generalInvoiceVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOList[];
    instanceId?: string;
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBody extends $tea.Model {
    batchUpdateInvoiceResponse?: UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponse;
    errorInvoiceKeyVOList?: UpdateApplyReceiptAndInvoiceRelatedResponseBodyErrorInvoiceKeyVOList[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateApplyReceiptAndInvoiceRelatedResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDigitalInvoiceOrgInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDigitalInvoiceOrgInfoRequest extends $tea.Model {
    digitalInvoiceType?: string[];
    isDigitalOrg?: boolean;
    location?: string;
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDigitalInvoiceOrgInfoResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDigitalInvoiceOrgInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateDigitalInvoiceOrgInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoRequest extends $tea.Model {
    companyName?: string;
    taxNature?: string;
    taxNo?: string;
    taxOrInvoiceHasInit?: boolean;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateFinanceCompanyInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceMultiCompanyInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceMultiCompanyInfoRequest extends $tea.Model {
    companyCode?: string;
    companyName?: string;
    taxNature?: string;
    taxNo?: string;
    taxOrInvoiceHasInit?: boolean;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceMultiCompanyInfoResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceMultiCompanyInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateFinanceMultiCompanyInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequest extends $tea.Model {
    blueGeneralInvoiceVO?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVO;
    blueInvoiceCode?: string;
    blueInvoiceNo?: string;
    blueInvoiceStatus?: string;
    companyCode?: string;
    operator?: string;
    redGeneralInvoiceVO?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVO;
    redInvoiceCode?: string;
    redInvoiceNo?: string;
    redInvoiceStatus?: string;
    targetInvoice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceAbandonStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequest extends $tea.Model {
    accountPeriod?: string;
    companyCode?: string;
    generalInvoiceVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOList[];
    invoiceKeyVOList?: UpdateInvoiceAccountPeriodRequestInvoiceKeyVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodResponseBody extends $tea.Model {
    errorResult?: UpdateInvoiceAccountPeriodResponseBodyErrorResult[];
    successResult?: UpdateInvoiceAccountPeriodResponseBodySuccessResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceAccountPeriodResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateRequest extends $tea.Model {
    companyCode?: string;
    invoiceFinanceInfoVOList?: UpdateInvoiceAccountingPeriodDateRequestInvoiceFinanceInfoVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateResponseBody extends $tea.Model {
    result?: UpdateInvoiceAccountingPeriodDateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceAccountingPeriodDateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusRequest extends $tea.Model {
    companyCode?: string;
    invoiceFinanceInfoVOList?: UpdateInvoiceAccountingStatusRequestInvoiceFinanceInfoVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusResponseBody extends $tea.Model {
    result?: UpdateInvoiceAccountingStatusResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceAccountingStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequest extends $tea.Model {
    generalInvoiceVO?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVO;
    invoiceCode?: string;
    invoiceNo?: string;
    operator?: string;
    receiptCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceAndReceiptRelatedResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusRequest extends $tea.Model {
    instanceId?: string;
    operator?: string;
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceIgnoreStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequest extends $tea.Model {
    companyCode?: string;
    deductStatus?: string;
    generalInvoiceVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOList[];
    invoiceKeyVOList?: UpdateInvoiceVerifyStatusRequestInvoiceKeyVOList[];
    operator?: string;
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceVerifyStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusRequest extends $tea.Model {
    accountantBookId?: string;
    actionType?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    operator?: string;
    voucherId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptRequest extends $tea.Model {
    receipts?: UpdateReceiptRequestReceipts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptResponseBody extends $tea.Model {
    results?: UpdateReceiptResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusRequest extends $tea.Model {
    accountPeriod?: string;
    actionType?: string;
    operatorId?: string;
    receiptId?: string;
    voucherCode?: string;
    voucherId?: string;
    voucherNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateReceiptVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RoleMemberMapValueMemberList extends $tea.Model {
    userId?: string;
    nick?: string;
    avatarUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionRequestRolePermissionItemListPermissionList extends $tea.Model {
    actionIdList?: string[];
    resourceIdentity?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendRolePermissionRequestRolePermissionItemList extends $tea.Model {
    permissionList?: AppendRolePermissionRequestRolePermissionItemListPermissionList[];
    roleCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: BatchAddInvoiceRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    receiverEmail?: string;
    receiverName?: string;
    receiverTel?: string;
    remark?: string;
    reviewer?: string;
    secondHandCarInvoiceDetailList?: BatchAddInvoiceRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: BatchAddInvoiceRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: BatchAddInvoiceRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponseBodyErrorResult extends $tea.Model {
    errorKey?: string;
    errorMsg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponseBodySuccessResult extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCustomerRequestCreateCustomerRequestList extends $tea.Model {
    description?: string;
    drawerEmail?: string;
    drawerTelephone?: string;
    name?: string;
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserBankName?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCustomerResponseBodyErrorResult extends $tea.Model {
    errorKey?: string;
    errorMsg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptRequestReceipts extends $tea.Model {
    amount?: string;
    categoryCode?: string;
    code?: string;
    createTime?: number;
    createUserId?: string;
    customerCode?: string;
    enterpriseAcountCode?: string;
    occurDate?: number;
    principalId?: string;
    projectCode?: string;
    receiptType?: number;
    remark?: string;
    supplierCode?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptResponseBodyResults extends $tea.Model {
    code?: string;
    errorCode?: string;
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptRequestReceipts extends $tea.Model {
    code?: string;
    deleteUserId?: string;
    receiptType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptResponseBodyResults extends $tea.Model {
    code?: string;
    errorCode?: string;
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormTemplateInfoResponseBodyReceiptFormTemplateInfoList extends $tea.Model {
    name?: string;
    processCode?: string;
    status?: string;
    suiteId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageRequestRequest extends $tea.Model {
    accountantBookId?: string;
    companyCode?: string;
    endTime?: number;
    financeType?: string;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    taxNo?: string;
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListTransportFeeDetailVOList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: GetInvoiceByPageResponseBodyResultListGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    sellerAddress?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    transportFeeDetailVOList?: GetInvoiceByPageResponseBodyResultListTransportFeeDetailVOList[];
    usedVehicleSaleDetailVOList?: GetInvoiceByPageResponseBodyResultListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: GetInvoiceByPageResponseBodyResultListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResult extends $tea.Model {
    hasMore?: string;
    list?: GetInvoiceByPageResponseBodyResultList[];
    nextCursor?: number;
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMultiCompanyInfoByCodeResponseBodyAdvancedSettingList extends $tea.Model {
    advancedSettingKey?: string;
    advancedSettingName?: string;
    endDate?: number;
    value?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponseBodyList extends $tea.Model {
    code?: string;
    isDir?: boolean;
    name?: string;
    parentCode?: string;
    status?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponseBodyList extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoResponseBodyList extends $tea.Model {
    code?: string;
    contactAddress?: string;
    contactCompanyTelephone?: string;
    contactEmail?: string;
    contactName?: string;
    contactTelephone?: string;
    description?: string;
    drawerEmail?: string;
    drawerTelephone?: string;
    name?: string;
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    purchaserrBankName?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponseBodyList extends $tea.Model {
    accountCode?: string;
    accountId?: string;
    accountName?: string;
    accountRemark?: string;
    accountType?: string;
    amount?: string;
    bankCode?: string;
    bankName?: string;
    createTime?: number;
    creator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMultiCompanyInfoResponseBodyListAdvancedSettingList extends $tea.Model {
    advancedSettingKey?: string;
    advancedSettingName?: string;
    endDate?: number;
    value?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMultiCompanyInfoResponseBodyList extends $tea.Model {
    advancedSettingList?: QueryMultiCompanyInfoResponseBodyListAdvancedSettingList[];
    companyCode?: string;
    companyName?: string;
    createTime?: string;
    remark?: string;
    status?: string;
    taxNature?: string;
    taxNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdResponseBodyPermissionDTOList extends $tea.Model {
    actionIdList?: string[];
    resourceIdentity?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProductByPageResponseBodyList extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    specification?: string;
    status?: string;
    unit?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponseBodyList extends $tea.Model {
    caode?: string;
    code?: string;
    createTime?: number;
    creator?: string;
    description?: string;
    name?: string;
    projectCode?: string;
    projectName?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceResponseBodyResultCreator extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceResponseBodyResultCustomer extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceResponseBodyResultProductInfoList extends $tea.Model {
    amountWithTax?: string;
    amountWithoutTax?: string;
    discountAmount?: string;
    name?: string;
    quantity?: string;
    specification?: string;
    taxClassificationCode?: string;
    taxRate?: string;
    unit?: string;
    unitPriceWithTax?: string;
    unitPriceWithoutTax?: string;
    withTax?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptDetailForInvoiceResponseBodyResult extends $tea.Model {
    accountantBookId?: string;
    amount?: string;
    applyStatus?: string;
    bizStatus?: string;
    businessId?: string;
    companyCode?: string;
    createTime?: string;
    creator?: QueryReceiptDetailForInvoiceResponseBodyResultCreator;
    customer?: QueryReceiptDetailForInvoiceResponseBodyResultCustomer;
    drawerEmail?: string;
    drawerTelephone?: string;
    invoiceType?: string;
    modelId?: string;
    productInfoList?: QueryReceiptDetailForInvoiceResponseBodyResultProductInfoList[];
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserBankName?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    receiptId?: string;
    recordTime?: string;
    remark?: string;
    source?: string;
    status?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListCreator extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListCustomer extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListProductInfoList extends $tea.Model {
    amountWithTax?: string;
    amountWithoutTax?: string;
    discountAmount?: string;
    name?: string;
    quantity?: string;
    specification?: string;
    taxClassificationCode?: string;
    taxRate?: string;
    unit?: string;
    unitPriceWithTax?: string;
    unitPriceWithoutTax?: string;
    withTax?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyList extends $tea.Model {
    accountantBookId?: string;
    amount?: string;
    applyStatus?: string;
    bizStatus?: string;
    businessId?: string;
    companyCode?: string;
    createTime?: string;
    creator?: QueryReceiptForInvoiceResponseBodyListCreator;
    customer?: QueryReceiptForInvoiceResponseBodyListCustomer;
    drawerEmail?: string;
    drawerTelephone?: string;
    invoiceType?: string;
    modelId?: string;
    productInfoList?: QueryReceiptForInvoiceResponseBodyListProductInfoList[];
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserBankName?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    receiptId?: string;
    recordTime?: string;
    remark?: string;
    source?: string;
    status?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListCreator extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListCustomer extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListPrincipal extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListProject extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListSupplier extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyList extends $tea.Model {
    accountantBookId?: string;
    amount?: string;
    businessId?: string;
    companyCode?: string;
    createTime?: string;
    creator?: QueryReceiptsBaseInfoResponseBodyListCreator;
    customer?: QueryReceiptsBaseInfoResponseBodyListCustomer;
    modelId?: string;
    principal?: QueryReceiptsBaseInfoResponseBodyListPrincipal;
    project?: QueryReceiptsBaseInfoResponseBodyListProject;
    receiptId?: string;
    recordTime?: string;
    remark?: string;
    source?: string;
    status?: string;
    supplier?: QueryReceiptsBaseInfoResponseBodyListSupplier;
    title?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageResponseBodyList extends $tea.Model {
    appId?: string;
    data?: string;
    modelId?: string;
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRoleMemberByPageResponseBodyList extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponseBodyList extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponseBodyFinanceEmpDeptOpenList extends $tea.Model {
    cascadeDeptId?: string;
    deptId?: number;
    name?: string;
    superDeptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponseBodyRoleVOList extends $tea.Model {
    roleCode?: string;
    roleName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedRequestInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponseInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponse extends $tea.Model {
    invoiceKeyVOList?: UnbindApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponseInvoiceKeyVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnbindApplyReceiptAndInvoiceRelatedResponseBodyErrorInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    receiverEmail?: string;
    receiverName?: string;
    receiverTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponseInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponse extends $tea.Model {
    invoiceKeyVOList?: UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponseInvoiceKeyVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBodyErrorInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVO extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVO extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodResponseBodyErrorResult extends $tea.Model {
    errorKey?: string;
    errorMsg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodResponseBodySuccessResult extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateRequestInvoiceFinanceInfoVOList extends $tea.Model {
    accountingPeriodData?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateResponseBodyResultFailInvoices extends $tea.Model {
    errorCode?: string;
    errorMsg?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingPeriodDateResponseBodyResult extends $tea.Model {
    failCount?: number;
    failInvoices?: UpdateInvoiceAccountingPeriodDateResponseBodyResultFailInvoices[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusRequestInvoiceFinanceInfoVOList extends $tea.Model {
    accountingStatus?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusResponseBodyResultFailInvoices extends $tea.Model {
    errorCode?: string;
    errorMsg?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountingStatusResponseBodyResult extends $tea.Model {
    failCount?: number;
    failInvoices?: UpdateInvoiceAccountingStatusResponseBodyResultFailInvoices[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOFlightItineraryDetails extends $tea.Model {
    carrier?: string;
    flightNumber?: string;
    flyDate?: string;
    flyFrom?: string;
    flyTime?: string;
    flyTo?: string;
    seat?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVO extends $tea.Model {
    accountPeriod?: string;
    agentCode?: string;
    amount?: string;
    amountWithTax?: string;
    caacDevelopmentFund?: string;
    checkCode?: string;
    checkTime?: string;
    city?: string;
    destination?: string;
    distance?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    entrance?: string;
    exit?: string;
    financeType?: string;
    flightItineraryDetails?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOFlightItineraryDetails[];
    fuelSurcharge?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOGeneralInvoiceDetailVOList[];
    getOffTime?: string;
    getOnTime?: string;
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    issueBy?: string;
    machineCode?: string;
    oilFlag?: string;
    origin?: string;
    passenger?: string;
    passengerUserId?: string;
    payee?: string;
    printSerialNumber?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    receiverEmail?: string;
    receiverName?: string;
    receiverTel?: string;
    remark?: string;
    seatClass?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    serialNo?: string;
    startTime?: string;
    supplySign?: string;
    surcharge?: string;
    taxAmount?: string;
    trainNo?: string;
    travelDate?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drawerName?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    imageUrl?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptRequestReceipts extends $tea.Model {
    amount?: string;
    categoryCode?: string;
    code?: string;
    customerCode?: string;
    enterpriseAcountCode?: string;
    occurDate?: number;
    principalId?: string;
    projectCode?: string;
    receiptType?: number;
    remark?: string;
    supplierCode?: string;
    title?: string;
    updateTime?: number;
    updateUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptResponseBodyResults extends $tea.Model {
    code?: string;
    errorCode?: string;
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    /**
     * @summary 追加角色权限点
     *
     * @param tmpReq AppendRolePermissionRequest
     * @param headers AppendRolePermissionHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return AppendRolePermissionResponse
     */
    appendRolePermissionWithOptions(tmpReq: AppendRolePermissionRequest, headers: AppendRolePermissionHeaders, runtime: $Util.RuntimeOptions): Promise<AppendRolePermissionResponse>;
    /**
     * @summary 追加角色权限点
     *
     * @param request AppendRolePermissionRequest
     * @return AppendRolePermissionResponse
     */
    appendRolePermission(request: AppendRolePermissionRequest): Promise<AppendRolePermissionResponse>;
    /**
     * @summary 发票数据批量写入
     *
     * @param request BatchAddInvoiceRequest
     * @param headers BatchAddInvoiceHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchAddInvoiceResponse
     */
    batchAddInvoiceWithOptions(request: BatchAddInvoiceRequest, headers: BatchAddInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<BatchAddInvoiceResponse>;
    /**
     * @summary 发票数据批量写入
     *
     * @param request BatchAddInvoiceRequest
     * @return BatchAddInvoiceResponse
     */
    batchAddInvoice(request: BatchAddInvoiceRequest): Promise<BatchAddInvoiceResponse>;
    /**
     * @summary 批量增加用户信息
     *
     * @param request BatchCreateCustomerRequest
     * @param headers BatchCreateCustomerHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchCreateCustomerResponse
     */
    batchCreateCustomerWithOptions(request: BatchCreateCustomerRequest, headers: BatchCreateCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<BatchCreateCustomerResponse>;
    /**
     * @summary 批量增加用户信息
     *
     * @param request BatchCreateCustomerRequest
     * @return BatchCreateCustomerResponse
     */
    batchCreateCustomer(request: BatchCreateCustomerRequest): Promise<BatchCreateCustomerResponse>;
    /**
     * @summary 绑定钉钉智能财务企业主体的账套信息
     *
     * @param request BindCompanyAccountantBookRequest
     * @param headers BindCompanyAccountantBookHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindCompanyAccountantBookResponse
     */
    bindCompanyAccountantBookWithOptions(request: BindCompanyAccountantBookRequest, headers: BindCompanyAccountantBookHeaders, runtime: $Util.RuntimeOptions): Promise<BindCompanyAccountantBookResponse>;
    /**
     * @summary 绑定钉钉智能财务企业主体的账套信息
     *
     * @param request BindCompanyAccountantBookRequest
     * @return BindCompanyAccountantBookResponse
     */
    bindCompanyAccountantBook(request: BindCompanyAccountantBookRequest): Promise<BindCompanyAccountantBookResponse>;
    /**
     * @summary 查验发票是否生成凭证
     *
     * @param request CheckVoucherStatusRequest
     * @param headers CheckVoucherStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return CheckVoucherStatusResponse
     */
    checkVoucherStatusWithOptions(request: CheckVoucherStatusRequest, headers: CheckVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<CheckVoucherStatusResponse>;
    /**
     * @summary 查验发票是否生成凭证
     *
     * @param request CheckVoucherStatusRequest
     * @return CheckVoucherStatusResponse
     */
    checkVoucherStatus(request: CheckVoucherStatusRequest): Promise<CheckVoucherStatusResponse>;
    /**
     * @summary 创建智能财务的客户信息
     *
     * @param request CreateCustomerRequest
     * @param headers CreateCustomerHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateCustomerResponse
     */
    createCustomerWithOptions(request: CreateCustomerRequest, headers: CreateCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCustomerResponse>;
    /**
     * @summary 创建智能财务的客户信息
     *
     * @param request CreateCustomerRequest
     * @return CreateCustomerResponse
     */
    createCustomer(request: CreateCustomerRequest): Promise<CreateCustomerResponse>;
    /**
     * @summary 创建智能财务单据
     *
     * @param request CreateReceiptRequest
     * @param headers CreateReceiptHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateReceiptResponse
     */
    createReceiptWithOptions(request: CreateReceiptRequest, headers: CreateReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<CreateReceiptResponse>;
    /**
     * @summary 创建智能财务单据
     *
     * @param request CreateReceiptRequest
     * @return CreateReceiptResponse
     */
    createReceipt(request: CreateReceiptRequest): Promise<CreateReceiptResponse>;
    /**
     * @summary 删除智能财务单据
     *
     * @param request DeleteReceiptRequest
     * @param headers DeleteReceiptHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteReceiptResponse
     */
    deleteReceiptWithOptions(request: DeleteReceiptRequest, headers: DeleteReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteReceiptResponse>;
    /**
     * @summary 删除智能财务单据
     *
     * @param request DeleteReceiptRequest
     * @return DeleteReceiptResponse
     */
    deleteReceipt(request: DeleteReceiptRequest): Promise<DeleteReceiptResponse>;
    /**
     * @summary 获取可以查看账本的用户列表
     *
     * @param headers GetBookkeepingUserListHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetBookkeepingUserListResponse
     */
    getBookkeepingUserListWithOptions(headers: GetBookkeepingUserListHeaders, runtime: $Util.RuntimeOptions): Promise<GetBookkeepingUserListResponse>;
    /**
     * @summary 获取可以查看账本的用户列表
     *
     * @return GetBookkeepingUserListResponse
     */
    getBookkeepingUserList(): Promise<GetBookkeepingUserListResponse>;
    /**
     * @summary 获取费用类别
     *
     * @param request GetCategoryRequest
     * @param headers GetCategoryHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetCategoryResponse
     */
    getCategoryWithOptions(request: GetCategoryRequest, headers: GetCategoryHeaders, runtime: $Util.RuntimeOptions): Promise<GetCategoryResponse>;
    /**
     * @summary 获取费用类别
     *
     * @param request GetCategoryRequest
     * @return GetCategoryResponse
     */
    getCategory(request: GetCategoryRequest): Promise<GetCategoryResponse>;
    /**
     * @summary 获取智能财务应用内维护的客户信息
     *
     * @param request GetCustomerRequest
     * @param headers GetCustomerHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetCustomerResponse
     */
    getCustomerWithOptions(request: GetCustomerRequest, headers: GetCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<GetCustomerResponse>;
    /**
     * @summary 获取智能财务应用内维护的客户信息
     *
     * @param request GetCustomerRequest
     * @return GetCustomerResponse
     */
    getCustomer(request: GetCustomerRequest): Promise<GetCustomerResponse>;
    /**
     * @summary 获取企业账户
     *
     * @param request GetFinanceAccountRequest
     * @param headers GetFinanceAccountHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetFinanceAccountResponse
     */
    getFinanceAccountWithOptions(request: GetFinanceAccountRequest, headers: GetFinanceAccountHeaders, runtime: $Util.RuntimeOptions): Promise<GetFinanceAccountResponse>;
    /**
     * @summary 获取企业账户
     *
     * @param request GetFinanceAccountRequest
     * @return GetFinanceAccountResponse
     */
    getFinanceAccount(request: GetFinanceAccountRequest): Promise<GetFinanceAccountResponse>;
    /**
     * @summary 获取智能财务套件模版信息
     *
     * @param headers GetFormTemplateInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetFormTemplateInfoResponse
     */
    getFormTemplateInfoWithOptions(headers: GetFormTemplateInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetFormTemplateInfoResponse>;
    /**
     * @summary 获取智能财务套件模版信息
     *
     * @return GetFormTemplateInfoResponse
     */
    getFormTemplateInfo(): Promise<GetFormTemplateInfoResponse>;
    /**
     * @summary 发票分页查询接口
     *
     * @param tmpReq GetInvoiceByPageRequest
     * @param headers GetInvoiceByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetInvoiceByPageResponse
     */
    getInvoiceByPageWithOptions(tmpReq: GetInvoiceByPageRequest, headers: GetInvoiceByPageHeaders, runtime: $Util.RuntimeOptions): Promise<GetInvoiceByPageResponse>;
    /**
     * @summary 发票分页查询接口
     *
     * @param request GetInvoiceByPageRequest
     * @return GetInvoiceByPageResponse
     */
    getInvoiceByPage(request: GetInvoiceByPageRequest): Promise<GetInvoiceByPageResponse>;
    /**
     * @summary 用来给isv提供是否使用智能账本的判断接口
     *
     * @param headers GetIsNewVersionHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetIsNewVersionResponse
     */
    getIsNewVersionWithOptions(headers: GetIsNewVersionHeaders, runtime: $Util.RuntimeOptions): Promise<GetIsNewVersionResponse>;
    /**
     * @summary 用来给isv提供是否使用智能账本的判断接口
     *
     * @return GetIsNewVersionResponse
     */
    getIsNewVersion(): Promise<GetIsNewVersionResponse>;
    /**
     * @summary 根据comanyCode查询钉钉智能财务多主体信息
     *
     * @param headers GetMultiCompanyInfoByCodeHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetMultiCompanyInfoByCodeResponse
     */
    getMultiCompanyInfoByCodeWithOptions(companyCode: string, headers: GetMultiCompanyInfoByCodeHeaders, runtime: $Util.RuntimeOptions): Promise<GetMultiCompanyInfoByCodeResponse>;
    /**
     * @summary 根据comanyCode查询钉钉智能财务多主体信息
     *
     * @return GetMultiCompanyInfoByCodeResponse
     */
    getMultiCompanyInfoByCode(companyCode: string): Promise<GetMultiCompanyInfoByCodeResponse>;
    /**
     * @summary 获取商品信息
     *
     * @param request GetProductRequest
     * @param headers GetProductHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetProductResponse
     */
    getProductWithOptions(request: GetProductRequest, headers: GetProductHeaders, runtime: $Util.RuntimeOptions): Promise<GetProductResponse>;
    /**
     * @summary 获取商品信息
     *
     * @param request GetProductRequest
     * @return GetProductResponse
     */
    getProduct(request: GetProductRequest): Promise<GetProductResponse>;
    /**
     * @summary 获取单条项目
     *
     * @param request GetProjectRequest
     * @param headers GetProjectHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetProjectResponse
     */
    getProjectWithOptions(request: GetProjectRequest, headers: GetProjectHeaders, runtime: $Util.RuntimeOptions): Promise<GetProjectResponse>;
    /**
     * @summary 获取单条项目
     *
     * @param request GetProjectRequest
     * @return GetProjectResponse
     */
    getProject(request: GetProjectRequest): Promise<GetProjectResponse>;
    /**
     * @summary 获取智能财务单据详情
     *
     * @param request GetReceiptRequest
     * @param headers GetReceiptHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetReceiptResponse
     */
    getReceiptWithOptions(request: GetReceiptRequest, headers: GetReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<GetReceiptResponse>;
    /**
     * @summary 获取智能财务单据详情
     *
     * @param request GetReceiptRequest
     * @return GetReceiptResponse
     */
    getReceipt(request: GetReceiptRequest): Promise<GetReceiptResponse>;
    /**
     * @summary 获取智能财务应用内维护的供应商信息
     *
     * @param request GetSupplierRequest
     * @param headers GetSupplierHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSupplierResponse
     */
    getSupplierWithOptions(request: GetSupplierRequest, headers: GetSupplierHeaders, runtime: $Util.RuntimeOptions): Promise<GetSupplierResponse>;
    /**
     * @summary 获取智能财务应用内维护的供应商信息
     *
     * @param request GetSupplierRequest
     * @return GetSupplierResponse
     */
    getSupplier(request: GetSupplierRequest): Promise<GetSupplierResponse>;
    /**
     * @summary 获取用友开放平台接口鉴权信息
     *
     * @param request GetYongYouOpenApiTokenRequest
     * @param headers GetYongYouOpenApiTokenHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetYongYouOpenApiTokenResponse
     */
    getYongYouOpenApiTokenWithOptions(request: GetYongYouOpenApiTokenRequest, headers: GetYongYouOpenApiTokenHeaders, runtime: $Util.RuntimeOptions): Promise<GetYongYouOpenApiTokenResponse>;
    /**
     * @summary 获取用友开放平台接口鉴权信息
     *
     * @param request GetYongYouOpenApiTokenRequest
     * @return GetYongYouOpenApiTokenResponse
     */
    getYongYouOpenApiToken(request: GetYongYouOpenApiTokenRequest): Promise<GetYongYouOpenApiTokenResponse>;
    /**
     * @summary 查询钉钉组织绑定的畅捷通组织
     *
     * @param headers GetYongYouOrgRelationHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetYongYouOrgRelationResponse
     */
    getYongYouOrgRelationWithOptions(headers: GetYongYouOrgRelationHeaders, runtime: $Util.RuntimeOptions): Promise<GetYongYouOrgRelationResponse>;
    /**
     * @summary 查询钉钉组织绑定的畅捷通组织
     *
     * @return GetYongYouOrgRelationResponse
     */
    getYongYouOrgRelation(): Promise<GetYongYouOrgRelationResponse>;
    /**
     * @summary 权益核销
     *
     * @param request ProfessionBenefitConsumeRequest
     * @param headers ProfessionBenefitConsumeHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return ProfessionBenefitConsumeResponse
     */
    professionBenefitConsumeWithOptions(request: ProfessionBenefitConsumeRequest, headers: ProfessionBenefitConsumeHeaders, runtime: $Util.RuntimeOptions): Promise<ProfessionBenefitConsumeResponse>;
    /**
     * @summary 权益核销
     *
     * @param request ProfessionBenefitConsumeRequest
     * @return ProfessionBenefitConsumeResponse
     */
    professionBenefitConsume(request: ProfessionBenefitConsumeRequest): Promise<ProfessionBenefitConsumeResponse>;
    /**
     * @summary 触发单据同步给有成
     *
     * @param request PushHistoricalReceiptsRequest
     * @param headers PushHistoricalReceiptsHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return PushHistoricalReceiptsResponse
     */
    pushHistoricalReceiptsWithOptions(request: PushHistoricalReceiptsRequest, headers: PushHistoricalReceiptsHeaders, runtime: $Util.RuntimeOptions): Promise<PushHistoricalReceiptsResponse>;
    /**
     * @summary 触发单据同步给有成
     *
     * @param request PushHistoricalReceiptsRequest
     * @return PushHistoricalReceiptsResponse
     */
    pushHistoricalReceipts(request: PushHistoricalReceiptsRequest): Promise<PushHistoricalReceiptsResponse>;
    /**
     * @summary 批量获取费用类别
     *
     * @param request QueryCategoryByPageRequest
     * @param headers QueryCategoryByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryCategoryByPageResponse
     */
    queryCategoryByPageWithOptions(request: QueryCategoryByPageRequest, headers: QueryCategoryByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCategoryByPageResponse>;
    /**
     * @summary 批量获取费用类别
     *
     * @param request QueryCategoryByPageRequest
     * @return QueryCategoryByPageResponse
     */
    queryCategoryByPage(request: QueryCategoryByPageRequest): Promise<QueryCategoryByPageResponse>;
    /**
     * @summary 查询某个主体的开票申请单的提单数量
     *
     * @param request QueryCompanyInvoiceRelationCountRequest
     * @param headers QueryCompanyInvoiceRelationCountHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryCompanyInvoiceRelationCountResponse
     */
    queryCompanyInvoiceRelationCountWithOptions(request: QueryCompanyInvoiceRelationCountRequest, headers: QueryCompanyInvoiceRelationCountHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCompanyInvoiceRelationCountResponse>;
    /**
     * @summary 查询某个主体的开票申请单的提单数量
     *
     * @param request QueryCompanyInvoiceRelationCountRequest
     * @return QueryCompanyInvoiceRelationCountResponse
     */
    queryCompanyInvoiceRelationCount(request: QueryCompanyInvoiceRelationCountRequest): Promise<QueryCompanyInvoiceRelationCountResponse>;
    /**
     * @summary 分页批量获取智能财务应用内维护的客户信息
     *
     * @param request QueryCustomerByPageRequest
     * @param headers QueryCustomerByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryCustomerByPageResponse
     */
    queryCustomerByPageWithOptions(request: QueryCustomerByPageRequest, headers: QueryCustomerByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomerByPageResponse>;
    /**
     * @summary 分页批量获取智能财务应用内维护的客户信息
     *
     * @param request QueryCustomerByPageRequest
     * @return QueryCustomerByPageResponse
     */
    queryCustomerByPage(request: QueryCustomerByPageRequest): Promise<QueryCustomerByPageResponse>;
    /**
     * @summary 提供给合作伙伴，查询智能财务的客户配置信息
     *
     * @param request QueryCustomerInfoRequest
     * @param headers QueryCustomerInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryCustomerInfoResponse
     */
    queryCustomerInfoWithOptions(request: QueryCustomerInfoRequest, headers: QueryCustomerInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomerInfoResponse>;
    /**
     * @summary 提供给合作伙伴，查询智能财务的客户配置信息
     *
     * @param request QueryCustomerInfoRequest
     * @return QueryCustomerInfoResponse
     */
    queryCustomerInfo(request: QueryCustomerInfoRequest): Promise<QueryCustomerInfoResponse>;
    /**
     * @summary 批量获取企业账户
     *
     * @param request QueryEnterpriseAccountByPageRequest
     * @param headers QueryEnterpriseAccountByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEnterpriseAccountByPageResponse
     */
    queryEnterpriseAccountByPageWithOptions(request: QueryEnterpriseAccountByPageRequest, headers: QueryEnterpriseAccountByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryEnterpriseAccountByPageResponse>;
    /**
     * @summary 批量获取企业账户
     *
     * @param request QueryEnterpriseAccountByPageRequest
     * @return QueryEnterpriseAccountByPageResponse
     */
    queryEnterpriseAccountByPage(request: QueryEnterpriseAccountByPageRequest): Promise<QueryEnterpriseAccountByPageResponse>;
    /**
     * @summary 查询智能财务配置的企业信息
     *
     * @param headers QueryFinanceCompanyInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryFinanceCompanyInfoResponse
     */
    queryFinanceCompanyInfoWithOptions(headers: QueryFinanceCompanyInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryFinanceCompanyInfoResponse>;
    /**
     * @summary 查询智能财务配置的企业信息
     *
     * @return QueryFinanceCompanyInfoResponse
     */
    queryFinanceCompanyInfo(): Promise<QueryFinanceCompanyInfoResponse>;
    /**
     * @summary 查询开票申请单的提单数量
     *
     * @param headers QueryInvoiceRelationCountHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryInvoiceRelationCountResponse
     */
    queryInvoiceRelationCountWithOptions(headers: QueryInvoiceRelationCountHeaders, runtime: $Util.RuntimeOptions): Promise<QueryInvoiceRelationCountResponse>;
    /**
     * @summary 查询开票申请单的提单数量
     *
     * @return QueryInvoiceRelationCountResponse
     */
    queryInvoiceRelationCount(): Promise<QueryInvoiceRelationCountResponse>;
    /**
     * @summary 查询钉钉智能财务多主体信息
     *
     * @param headers QueryMultiCompanyInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryMultiCompanyInfoResponse
     */
    queryMultiCompanyInfoWithOptions(headers: QueryMultiCompanyInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMultiCompanyInfoResponse>;
    /**
     * @summary 查询钉钉智能财务多主体信息
     *
     * @return QueryMultiCompanyInfoResponse
     */
    queryMultiCompanyInfo(): Promise<QueryMultiCompanyInfoResponse>;
    /**
     * @summary 提供给小望，查询当前用户所具有的的小望权限点信息
     *
     * @param request QueryPermissionByUserIdRequest
     * @param headers QueryPermissionByUserIdHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryPermissionByUserIdResponse
     */
    queryPermissionByUserIdWithOptions(request: QueryPermissionByUserIdRequest, headers: QueryPermissionByUserIdHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPermissionByUserIdResponse>;
    /**
     * @summary 提供给小望，查询当前用户所具有的的小望权限点信息
     *
     * @param request QueryPermissionByUserIdRequest
     * @return QueryPermissionByUserIdResponse
     */
    queryPermissionByUserId(request: QueryPermissionByUserIdRequest): Promise<QueryPermissionByUserIdResponse>;
    /**
     * @summary 查询智能财务角色下的成员信息
     *
     * @param request QueryPermissionRoleMemberRequest
     * @param headers QueryPermissionRoleMemberHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryPermissionRoleMemberResponse
     */
    queryPermissionRoleMemberWithOptions(request: QueryPermissionRoleMemberRequest, headers: QueryPermissionRoleMemberHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPermissionRoleMemberResponse>;
    /**
     * @summary 查询智能财务角色下的成员信息
     *
     * @param request QueryPermissionRoleMemberRequest
     * @return QueryPermissionRoleMemberResponse
     */
    queryPermissionRoleMember(request: QueryPermissionRoleMemberRequest): Promise<QueryPermissionRoleMemberResponse>;
    /**
     * @summary 批量获取商品信息
     *
     * @param request QueryProductByPageRequest
     * @param headers QueryProductByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProductByPageResponse
     */
    queryProductByPageWithOptions(request: QueryProductByPageRequest, headers: QueryProductByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryProductByPageResponse>;
    /**
     * @summary 批量获取商品信息
     *
     * @param request QueryProductByPageRequest
     * @return QueryProductByPageResponse
     */
    queryProductByPage(request: QueryProductByPageRequest): Promise<QueryProductByPageResponse>;
    /**
     * @summary 批量获取项目信息
     *
     * @param request QueryProjectByPageRequest
     * @param headers QueryProjectByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProjectByPageResponse
     */
    queryProjectByPageWithOptions(request: QueryProjectByPageRequest, headers: QueryProjectByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryProjectByPageResponse>;
    /**
     * @summary 批量获取项目信息
     *
     * @param request QueryProjectByPageRequest
     * @return QueryProjectByPageResponse
     */
    queryProjectByPage(request: QueryProjectByPageRequest): Promise<QueryProjectByPageResponse>;
    /**
     * @summary 查询开票申请单详情
     *
     * @param request QueryReceiptDetailForInvoiceRequest
     * @param headers QueryReceiptDetailForInvoiceHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryReceiptDetailForInvoiceResponse
     */
    queryReceiptDetailForInvoiceWithOptions(request: QueryReceiptDetailForInvoiceRequest, headers: QueryReceiptDetailForInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptDetailForInvoiceResponse>;
    /**
     * @summary 查询开票申请单详情
     *
     * @param request QueryReceiptDetailForInvoiceRequest
     * @return QueryReceiptDetailForInvoiceResponse
     */
    queryReceiptDetailForInvoice(request: QueryReceiptDetailForInvoiceRequest): Promise<QueryReceiptDetailForInvoiceResponse>;
    /**
     * @summary 批量查询智能财务单据主数据信息
     *
     * @param request QueryReceiptForInvoiceRequest
     * @param headers QueryReceiptForInvoiceHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryReceiptForInvoiceResponse
     */
    queryReceiptForInvoiceWithOptions(request: QueryReceiptForInvoiceRequest, headers: QueryReceiptForInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptForInvoiceResponse>;
    /**
     * @summary 批量查询智能财务单据主数据信息
     *
     * @param request QueryReceiptForInvoiceRequest
     * @return QueryReceiptForInvoiceResponse
     */
    queryReceiptForInvoice(request: QueryReceiptForInvoiceRequest): Promise<QueryReceiptForInvoiceResponse>;
    /**
     * @summary 批量查询智能财务的单据主数据基本信息
     *
     * @param request QueryReceiptsBaseInfoRequest
     * @param headers QueryReceiptsBaseInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryReceiptsBaseInfoResponse
     */
    queryReceiptsBaseInfoWithOptions(request: QueryReceiptsBaseInfoRequest, headers: QueryReceiptsBaseInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptsBaseInfoResponse>;
    /**
     * @summary 批量查询智能财务的单据主数据基本信息
     *
     * @param request QueryReceiptsBaseInfoRequest
     * @return QueryReceiptsBaseInfoResponse
     */
    queryReceiptsBaseInfo(request: QueryReceiptsBaseInfoRequest): Promise<QueryReceiptsBaseInfoResponse>;
    /**
     * @summary 分页获取智能财务单据详情列表
     *
     * @param request QueryReceiptsByPageRequest
     * @param headers QueryReceiptsByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryReceiptsByPageResponse
     */
    queryReceiptsByPageWithOptions(request: QueryReceiptsByPageRequest, headers: QueryReceiptsByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptsByPageResponse>;
    /**
     * @summary 分页获取智能财务单据详情列表
     *
     * @param request QueryReceiptsByPageRequest
     * @return QueryReceiptsByPageResponse
     */
    queryReceiptsByPage(request: QueryReceiptsByPageRequest): Promise<QueryReceiptsByPageResponse>;
    /**
     * @summary 分页查询智能财务角色下的成员信息
     *
     * @param request QueryRoleMemberByPageRequest
     * @param headers QueryRoleMemberByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryRoleMemberByPageResponse
     */
    queryRoleMemberByPageWithOptions(request: QueryRoleMemberByPageRequest, headers: QueryRoleMemberByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryRoleMemberByPageResponse>;
    /**
     * @summary 分页查询智能财务角色下的成员信息
     *
     * @param request QueryRoleMemberByPageRequest
     * @return QueryRoleMemberByPageResponse
     */
    queryRoleMemberByPage(request: QueryRoleMemberByPageRequest): Promise<QueryRoleMemberByPageResponse>;
    /**
     * @summary 分页批量获取智能财务应用内维护的供应商信息
     *
     * @param request QuerySupplierByPageRequest
     * @param headers QuerySupplierByPageHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySupplierByPageResponse
     */
    querySupplierByPageWithOptions(request: QuerySupplierByPageRequest, headers: QuerySupplierByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QuerySupplierByPageResponse>;
    /**
     * @summary 分页批量获取智能财务应用内维护的供应商信息
     *
     * @param request QuerySupplierByPageRequest
     * @return QuerySupplierByPageResponse
     */
    querySupplierByPage(request: QuerySupplierByPageRequest): Promise<QuerySupplierByPageResponse>;
    /**
     * @summary 查询用户角色
     *
     * @param request QueryUserRoleListRequest
     * @param headers QueryUserRoleListHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryUserRoleListResponse
     */
    queryUserRoleListWithOptions(request: QueryUserRoleListRequest, headers: QueryUserRoleListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserRoleListResponse>;
    /**
     * @summary 查询用户角色
     *
     * @param request QueryUserRoleListRequest
     * @return QueryUserRoleListResponse
     */
    queryUserRoleList(request: QueryUserRoleListRequest): Promise<QueryUserRoleListResponse>;
    /**
     * @summary 解绑开票申请单关联的发票
     *
     * @param request UnbindApplyReceiptAndInvoiceRelatedRequest
     * @param headers UnbindApplyReceiptAndInvoiceRelatedHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbindApplyReceiptAndInvoiceRelatedResponse
     */
    unbindApplyReceiptAndInvoiceRelatedWithOptions(request: UnbindApplyReceiptAndInvoiceRelatedRequest, headers: UnbindApplyReceiptAndInvoiceRelatedHeaders, runtime: $Util.RuntimeOptions): Promise<UnbindApplyReceiptAndInvoiceRelatedResponse>;
    /**
     * @summary 解绑开票申请单关联的发票
     *
     * @param request UnbindApplyReceiptAndInvoiceRelatedRequest
     * @return UnbindApplyReceiptAndInvoiceRelatedResponse
     */
    unbindApplyReceiptAndInvoiceRelated(request: UnbindApplyReceiptAndInvoiceRelatedRequest): Promise<UnbindApplyReceiptAndInvoiceRelatedResponse>;
    /**
     * @summary 开票申请单关联发票
     *
     * @param request UpdateApplyReceiptAndInvoiceRelatedRequest
     * @param headers UpdateApplyReceiptAndInvoiceRelatedHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateApplyReceiptAndInvoiceRelatedResponse
     */
    updateApplyReceiptAndInvoiceRelatedWithOptions(request: UpdateApplyReceiptAndInvoiceRelatedRequest, headers: UpdateApplyReceiptAndInvoiceRelatedHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateApplyReceiptAndInvoiceRelatedResponse>;
    /**
     * @summary 开票申请单关联发票
     *
     * @param request UpdateApplyReceiptAndInvoiceRelatedRequest
     * @return UpdateApplyReceiptAndInvoiceRelatedResponse
     */
    updateApplyReceiptAndInvoiceRelated(request: UpdateApplyReceiptAndInvoiceRelatedRequest): Promise<UpdateApplyReceiptAndInvoiceRelatedResponse>;
    /**
     * @summary 更新全电发票企业信息
     *
     * @param request UpdateDigitalInvoiceOrgInfoRequest
     * @param headers UpdateDigitalInvoiceOrgInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateDigitalInvoiceOrgInfoResponse
     */
    updateDigitalInvoiceOrgInfoWithOptions(request: UpdateDigitalInvoiceOrgInfoRequest, headers: UpdateDigitalInvoiceOrgInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateDigitalInvoiceOrgInfoResponse>;
    /**
     * @summary 更新全电发票企业信息
     *
     * @param request UpdateDigitalInvoiceOrgInfoRequest
     * @return UpdateDigitalInvoiceOrgInfoResponse
     */
    updateDigitalInvoiceOrgInfo(request: UpdateDigitalInvoiceOrgInfoRequest): Promise<UpdateDigitalInvoiceOrgInfoResponse>;
    /**
     * @summary 更新智能财务配置的企业信息
     *
     * @param request UpdateFinanceCompanyInfoRequest
     * @param headers UpdateFinanceCompanyInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateFinanceCompanyInfoResponse
     */
    updateFinanceCompanyInfoWithOptions(request: UpdateFinanceCompanyInfoRequest, headers: UpdateFinanceCompanyInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateFinanceCompanyInfoResponse>;
    /**
     * @summary 更新智能财务配置的企业信息
     *
     * @param request UpdateFinanceCompanyInfoRequest
     * @return UpdateFinanceCompanyInfoResponse
     */
    updateFinanceCompanyInfo(request: UpdateFinanceCompanyInfoRequest): Promise<UpdateFinanceCompanyInfoResponse>;
    /**
     * @summary 更新钉钉智能财务多主体信息
     *
     * @param request UpdateFinanceMultiCompanyInfoRequest
     * @param headers UpdateFinanceMultiCompanyInfoHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateFinanceMultiCompanyInfoResponse
     */
    updateFinanceMultiCompanyInfoWithOptions(request: UpdateFinanceMultiCompanyInfoRequest, headers: UpdateFinanceMultiCompanyInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateFinanceMultiCompanyInfoResponse>;
    /**
     * @summary 更新钉钉智能财务多主体信息
     *
     * @param request UpdateFinanceMultiCompanyInfoRequest
     * @return UpdateFinanceMultiCompanyInfoResponse
     */
    updateFinanceMultiCompanyInfo(request: UpdateFinanceMultiCompanyInfoRequest): Promise<UpdateFinanceMultiCompanyInfoResponse>;
    /**
     * @summary 发票红冲/废弃状态变更接口
     *
     * @param request UpdateInvoiceAbandonStatusRequest
     * @param headers UpdateInvoiceAbandonStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceAbandonStatusResponse
     */
    updateInvoiceAbandonStatusWithOptions(request: UpdateInvoiceAbandonStatusRequest, headers: UpdateInvoiceAbandonStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAbandonStatusResponse>;
    /**
     * @summary 发票红冲/废弃状态变更接口
     *
     * @param request UpdateInvoiceAbandonStatusRequest
     * @return UpdateInvoiceAbandonStatusResponse
     */
    updateInvoiceAbandonStatus(request: UpdateInvoiceAbandonStatusRequest): Promise<UpdateInvoiceAbandonStatusResponse>;
    /**
     * @summary 更新发票账期状态
     *
     * @param request UpdateInvoiceAccountPeriodRequest
     * @param headers UpdateInvoiceAccountPeriodHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceAccountPeriodResponse
     */
    updateInvoiceAccountPeriodWithOptions(request: UpdateInvoiceAccountPeriodRequest, headers: UpdateInvoiceAccountPeriodHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAccountPeriodResponse>;
    /**
     * @summary 更新发票账期状态
     *
     * @param request UpdateInvoiceAccountPeriodRequest
     * @return UpdateInvoiceAccountPeriodResponse
     */
    updateInvoiceAccountPeriod(request: UpdateInvoiceAccountPeriodRequest): Promise<UpdateInvoiceAccountPeriodResponse>;
    /**
     * @summary 更新全电企业入账时间
     *
     * @param request UpdateInvoiceAccountingPeriodDateRequest
     * @param headers UpdateInvoiceAccountingPeriodDateHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceAccountingPeriodDateResponse
     */
    updateInvoiceAccountingPeriodDateWithOptions(request: UpdateInvoiceAccountingPeriodDateRequest, headers: UpdateInvoiceAccountingPeriodDateHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAccountingPeriodDateResponse>;
    /**
     * @summary 更新全电企业入账时间
     *
     * @param request UpdateInvoiceAccountingPeriodDateRequest
     * @return UpdateInvoiceAccountingPeriodDateResponse
     */
    updateInvoiceAccountingPeriodDate(request: UpdateInvoiceAccountingPeriodDateRequest): Promise<UpdateInvoiceAccountingPeriodDateResponse>;
    /**
     * @summary 更新全电企业入账状态
     *
     * @param request UpdateInvoiceAccountingStatusRequest
     * @param headers UpdateInvoiceAccountingStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceAccountingStatusResponse
     */
    updateInvoiceAccountingStatusWithOptions(request: UpdateInvoiceAccountingStatusRequest, headers: UpdateInvoiceAccountingStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAccountingStatusResponse>;
    /**
     * @summary 更新全电企业入账状态
     *
     * @param request UpdateInvoiceAccountingStatusRequest
     * @return UpdateInvoiceAccountingStatusResponse
     */
    updateInvoiceAccountingStatus(request: UpdateInvoiceAccountingStatusRequest): Promise<UpdateInvoiceAccountingStatusResponse>;
    /**
     * @summary 更新发票关联审批单
     *
     * @param request UpdateInvoiceAndReceiptRelatedRequest
     * @param headers UpdateInvoiceAndReceiptRelatedHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceAndReceiptRelatedResponse
     */
    updateInvoiceAndReceiptRelatedWithOptions(request: UpdateInvoiceAndReceiptRelatedRequest, headers: UpdateInvoiceAndReceiptRelatedHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAndReceiptRelatedResponse>;
    /**
     * @summary 更新发票关联审批单
     *
     * @param request UpdateInvoiceAndReceiptRelatedRequest
     * @return UpdateInvoiceAndReceiptRelatedResponse
     */
    updateInvoiceAndReceiptRelated(request: UpdateInvoiceAndReceiptRelatedRequest): Promise<UpdateInvoiceAndReceiptRelatedResponse>;
    /**
     * @summary 更新发票忽略状态
     *
     * @param request UpdateInvoiceIgnoreStatusRequest
     * @param headers UpdateInvoiceIgnoreStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceIgnoreStatusResponse
     */
    updateInvoiceIgnoreStatusWithOptions(request: UpdateInvoiceIgnoreStatusRequest, headers: UpdateInvoiceIgnoreStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceIgnoreStatusResponse>;
    /**
     * @summary 更新发票忽略状态
     *
     * @param request UpdateInvoiceIgnoreStatusRequest
     * @return UpdateInvoiceIgnoreStatusResponse
     */
    updateInvoiceIgnoreStatus(request: UpdateInvoiceIgnoreStatusRequest): Promise<UpdateInvoiceIgnoreStatusResponse>;
    /**
     * @summary 发票认证状态变更接口
     *
     * @param request UpdateInvoiceVerifyStatusRequest
     * @param headers UpdateInvoiceVerifyStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceVerifyStatusResponse
     */
    updateInvoiceVerifyStatusWithOptions(request: UpdateInvoiceVerifyStatusRequest, headers: UpdateInvoiceVerifyStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceVerifyStatusResponse>;
    /**
     * @summary 发票认证状态变更接口
     *
     * @param request UpdateInvoiceVerifyStatusRequest
     * @return UpdateInvoiceVerifyStatusResponse
     */
    updateInvoiceVerifyStatus(request: UpdateInvoiceVerifyStatusRequest): Promise<UpdateInvoiceVerifyStatusResponse>;
    /**
     * @summary 更新发票生成凭证状态
     *
     * @param request UpdateInvoiceVoucherStatusRequest
     * @param headers UpdateInvoiceVoucherStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateInvoiceVoucherStatusResponse
     */
    updateInvoiceVoucherStatusWithOptions(request: UpdateInvoiceVoucherStatusRequest, headers: UpdateInvoiceVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceVoucherStatusResponse>;
    /**
     * @summary 更新发票生成凭证状态
     *
     * @param request UpdateInvoiceVoucherStatusRequest
     * @return UpdateInvoiceVoucherStatusResponse
     */
    updateInvoiceVoucherStatus(request: UpdateInvoiceVoucherStatusRequest): Promise<UpdateInvoiceVoucherStatusResponse>;
    /**
     * @summary 更新智能财务单据
     *
     * @param request UpdateReceiptRequest
     * @param headers UpdateReceiptHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateReceiptResponse
     */
    updateReceiptWithOptions(request: UpdateReceiptRequest, headers: UpdateReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateReceiptResponse>;
    /**
     * @summary 更新智能财务单据
     *
     * @param request UpdateReceiptRequest
     * @return UpdateReceiptResponse
     */
    updateReceipt(request: UpdateReceiptRequest): Promise<UpdateReceiptResponse>;
    /**
     * @summary 更新智能财务审批单的凭证状态
     *
     * @param request UpdateReceiptVoucherStatusRequest
     * @param headers UpdateReceiptVoucherStatusHeaders
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateReceiptVoucherStatusResponse
     */
    updateReceiptVoucherStatusWithOptions(request: UpdateReceiptVoucherStatusRequest, headers: UpdateReceiptVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateReceiptVoucherStatusResponse>;
    /**
     * @summary 更新智能财务审批单的凭证状态
     *
     * @param request UpdateReceiptVoucherStatusRequest
     * @return UpdateReceiptVoucherStatusResponse
     */
    updateReceiptVoucherStatus(request: UpdateReceiptVoucherStatusRequest): Promise<UpdateReceiptVoucherStatusResponse>;
}
